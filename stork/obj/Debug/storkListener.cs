//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Z:\VSProjects\stork\stork-lang\stork\stork.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace stork {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="storkParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public interface IstorkListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="storkParser.compileUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCompileUnit([NotNull] storkParser.CompileUnitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="storkParser.compileUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCompileUnit([NotNull] storkParser.CompileUnitContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="storkParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock([NotNull] storkParser.BlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="storkParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock([NotNull] storkParser.BlockContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="storkParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] storkParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="storkParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] storkParser.StatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="storkParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpr([NotNull] storkParser.ExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="storkParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpr([NotNull] storkParser.ExprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="storkParser.stat_define"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStat_define([NotNull] storkParser.Stat_defineContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="storkParser.stat_define"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStat_define([NotNull] storkParser.Stat_defineContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="storkParser.stat_assign"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStat_assign([NotNull] storkParser.Stat_assignContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="storkParser.stat_assign"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStat_assign([NotNull] storkParser.Stat_assignContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="storkParser.stat_functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStat_functionCall([NotNull] storkParser.Stat_functionCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="storkParser.stat_functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStat_functionCall([NotNull] storkParser.Stat_functionCallContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="storkParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValue([NotNull] storkParser.ValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="storkParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValue([NotNull] storkParser.ValueContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="storkParser.params"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParams([NotNull] storkParser.ParamsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="storkParser.params"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParams([NotNull] storkParser.ParamsContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="storkParser.operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOperator([NotNull] storkParser.OperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="storkParser.operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOperator([NotNull] storkParser.OperatorContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="storkParser.postfix_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPostfix_op([NotNull] storkParser.Postfix_opContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="storkParser.postfix_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPostfix_op([NotNull] storkParser.Postfix_opContext context);
}
} // namespace stork
